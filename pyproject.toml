[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "fueltracker"
version = "0.1.0"
description = "Fuel tracker sample application"
requires-python = ">=3.11"
authors = [{name="Example", email="example@example.com"}]
dependencies = [
    "PySide6>=6.7",
    "SQLModel>=0.0.16",
    "pandas",
    "fpdf2",
    "matplotlib",
    "python-dotenv",
    "alembic",
    "reportlab",
    "win10toast; sys_platform == 'win32'",
    "requests",
    "keyboard",
    "openpyxl",
    "pydantic-settings",
    "types-keyboard",
    "types-reportlab",
    "types-requests",
    "matplotlib-stubs",
    "rich",
]
[project.optional-dependencies]
dev = [
    "poethepoet",
    "types-requests",
    "types-matplotlib",
]
[project.scripts]
fueltracker = "fueltracker.main:run"

[tool.black]
line-length = 88

[tool.ruff]
line-length = 88

[tool.poe.tasks]
_ruff = { cmd = "ruff check .", help = "Run ruff linter" }
_mypy = { cmd = "mypy src/ --strict", help = "Run mypy type checking" }
_vulture = { cmd = "vulture src/", help = "Detect dead code" }

lint = { sequence = ["_ruff", "_mypy", "_vulture"], help = "Run all linters" }
migrate = { cmd = "python -m fueltracker migrate", help = "Run database migrations" }
test = { cmd = "pytest -q", deps = ["migrate"], help = "Run test suite" }
runtime-check = { cmd = "python -m fueltracker --check", env = { QT_QPA_PLATFORM = "offscreen" }, help = "Run app in headless mode" }
build = { cmd = "pyinstaller --noconfirm --clean --onefile fueltracker.spec", help = "Build standalone executable" }
validate = { sequence = ["lint", "test"], help = "Run linters then tests" }
report = { sequence = ["lint", "test", "runtime-check"], help = "Run all checks" }
